{"version":3,"sources":["file:///Users/waostudio/Desktop/jackbot/assets/Scripts/folder/Controller.ts"],"names":["_decorator","Button","Component","EditBox","Label","Node","ccclass","property","Controller","start","editBoxMoney","node","on","validateMoneyInput","editBoxName","validateNameInput","update","deltaTime","checkguest","GuestLb","active","dialog","LoginLb","loginBtnopen","closeLoginLb","signupBtn","signUp","closeSignUpLb","OpenProfile","profileNode","CloseProfile","log","console","login","username","loginUsernameInput","string","password","loginPasswordInput","users","JSON","parse","localStorage","getItem","user","find","guestNode","closeSignUpLb1","signUpBtn","signUpUsernameInput","signUpPasswordInput","confirmPassword","signUpConfirmPasswordInput","userExists","some","newUser","push","setItem","stringify","eventStatus","eventNode","minigame","minigameNode","allgameNode","selectMiniNode","selectAllNode","allgameOpen","payNode","shopNode","BankNode","rutOpen","RutNode","napNode","selectNap","selectRut","napOpen","moreBank","MoreBankNode","inputbank","bank","stk","ctk","cn","nd","nameBankLb","STKLb","CTKLb","CNLb","NDLb","vietcombank","MBbank","TGBank","money","numberRegex","test","name","nameRegex","noitcenap","editBoxTransactionID","transactionID","NoitceNode","noticeLb","setTimeout","balanceLb","closeNotice","noitcerut","editBoxNH","editBoxTK","editBoxNameRut","editBoxCN","editBoxBalanceR","Tk","CN","MoneyInt","parseFloat","moneyBalance","toString","closeshop"],"mappings":"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","sourcesContent":["import { _decorator, Button, Component, EditBox, Label, Node } from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"Controller\")\nexport class Controller extends Component {\n  @property(Node)\n  GuestLb: Node;\n  @property(Node)\n  LoginLb: Node;\n  @property(Node)\n  dialog: Node;\n  @property(Node)\n  signUp: Node;\n  @property(Button)\n  loginBtnopen: Button;\n  @property(Node)\n  guestNode: Node;\n  @property(Node)\n  profileNode: Node;\n  @property(Node)\n  eventNode: Node;\n  @property(Node)\n  minigameNode: Node;\n  @property(Node)\n  allgameNode: Node;\n  @property(Node)\n  selectMiniNode: Node;\n  @property(Node)\n  selectAllNode: Node;\n  @property(Node)\n  shopNode: Node;\n  @property(Node)\n  BankNode: Node;\n  @property(Node)\n  RutNode: Node;\n  @property(Node)\n  napNode: Node;\n  @property(Node)\n  selectNap: Node;\n  @property(Node)\n  selectRut: Node;\n  @property(Node)\n  MoreBankNode: Node;\n  @property(Node)\n  NoitceNode: Node;\n  @property(EditBox)\n  loginUsernameInput: EditBox = null;\n  @property(EditBox)\n  loginPasswordInput: EditBox = null;\n  @property(EditBox)\n  signUpUsernameInput: EditBox = null;\n  @property(EditBox)\n  signUpPasswordInput: EditBox = null;\n  @property(EditBox)\n  signUpConfirmPasswordInput: EditBox = null;\n  @property(EditBox)\n  editBoxMoney: EditBox = null;\n  @property(EditBox)\n  editBoxName: EditBox = null;\n  @property(EditBox)\n  editBoxTransactionID: EditBox = null;\n\n  @property(EditBox)\n  editBoxNH: EditBox = null;\n  @property(EditBox)\n  editBoxTK: EditBox = null;\n  @property(EditBox)\n  editBoxNameRut: EditBox = null;\n  @property(EditBox)\n  editBoxCN: EditBox = null;\n  @property(EditBox)\n  editBoxBalanceR: EditBox = null;\n\n  @property(Label)\n  STKLb: Label;\n  @property(Label)\n  CTKLb: Label;\n  @property(Label)\n  CNLb: Label;\n  @property(Label)\n  NDLb: Label;\n  @property(Label)\n  nameBankLb: Label;\n  @property(Label)\n  noticeLb: Label;\n  @property(Label)\n  balanceLb: Label;\n\n  start() {\n    this.editBoxMoney.node.on(\n      \"editing-did-ended\",\n      this.validateMoneyInput,\n      this\n    );\n\n    // Gán sự kiện kiểm tra cho editBoxName\n    this.editBoxName.node.on(\"editing-did-ended\", this.validateNameInput, this);\n  }\n\n  update(deltaTime: number) {}\n\n  checkguest() {\n    if (this.GuestLb.active === true) {\n      this.dialog.active = true;\n      this.LoginLb.active = true;\n      this.loginBtnopen.node.active = false;\n    }\n  }\n  closeLoginLb() {\n    this.dialog.active = false;\n    this.LoginLb.active = false;\n    this.loginBtnopen.node.active = true;\n  }\n\n  signupBtn() {\n    this.dialog.active = true;\n    this.signUp.active = true;\n  }\n\n  closeSignUpLb() {\n    this.dialog.active = false;\n    this.signUp.active = false;\n    this.loginBtnopen.node.active = true;\n  }\n\n  OpenProfile() {\n    this.dialog.active = true;\n    this.profileNode.active = true;\n    // this.loginBtnopen.node.active = true;\n  }\n\n  CloseProfile() {\n    this.dialog.active = false;\n    this.profileNode.active = false;\n\n    // this.loginBtnopen.node.active = true;\n  }\n\n  log() {\n    console.log(\"aaaaaaaaaa\");\n  }\n\n  //   login() {\n  //     const username = this.usernameInput.string;\n  //     const password = this.passwordInput.string;\n\n  //     // Replace with your own authentication logic\n  //     if (username === \"correctUsername\" && password === \"correctPassword\") {\n  //       this.dialog.active = false;\n  //       this.LoginLb.active = false;\n  //       this.loginBtnopen.node.active = false;\n  //       console.log(\"thanh cong\");\n  //     } else {\n  //       // Handle wrong credentials\n  //       console.log(\"Invalid username or password\");\n  //     }\n  //   }\n\n  login() {\n    const username = this.loginUsernameInput.string;\n    const password = this.loginPasswordInput.string;\n\n    const users = JSON.parse(localStorage.getItem(\"users\")) || [];\n    const user = users.find(\n      (user) => user.username === username && user.password === password\n    );\n\n    if (user) {\n      this.dialog.active = false;\n      this.LoginLb.active = false;\n      this.guestNode.active = false;\n      this.loginBtnopen.node.active = false;\n    } else {\n      console.log(\"Invalid username or password\");\n    }\n  }\n\n  closeSignUpLb1() {\n    this.dialog.active = false;\n    this.signUp.active = false;\n    this.loginBtnopen.node.active = true;\n    this.dialog.active = false;\n    this.LoginLb.active = false;\n    this.guestNode.active = false;\n    this.loginBtnopen.node.active = false;\n  }\n\n  signUpBtn() {\n    const username = this.signUpUsernameInput.string;\n    const password = this.signUpPasswordInput.string;\n    const confirmPassword = this.signUpConfirmPasswordInput.string;\n\n    if (password !== confirmPassword) {\n      console.log(\"Passwords do not match\");\n      return;\n    }\n\n    const users = JSON.parse(localStorage.getItem(\"users\")) || [];\n\n    const userExists = users.some((user) => user.username === username);\n\n    if (userExists) {\n      console.log(\"Username already exists\");\n      return;\n    }\n\n    const newUser = {\n      username: username,\n      password: password,\n    };\n\n    users.push(newUser);\n    localStorage.setItem(\"users\", JSON.stringify(users));\n\n    console.log(\"Sign-up successful\");\n    this.closeSignUpLb1();\n  }\n  private eventStatus() {\n    if (this.dialog.active === false && this.eventNode.active === false) {\n      this.dialog.active = true;\n      this.eventNode.active = true;\n    }\n    if (this.dialog.active === true && this.eventNode.active === true) {\n      this.dialog.active = false;\n      this.eventNode.active = false;\n    }\n  }\n\n  minigame() {\n    if (this.minigameNode.active === false) {\n      this.minigameNode.active = true;\n      this.allgameNode.active = false;\n      this.selectMiniNode.active = true;\n      this.selectAllNode.active = false;\n    }\n  }\n\n  allgameOpen() {\n    if (this.allgameNode.active === false) {\n      this.minigameNode.active = false;\n      this.allgameNode.active = true;\n      this.selectMiniNode.active = false;\n      this.selectAllNode.active = true;\n    }\n  }\n\n  payNode() {\n    this.dialog.active = true;\n    this.shopNode.active = true;\n    this.BankNode.active = true;\n  }\n  rutOpen() {\n    this.RutNode.active = true;\n    this.napNode.active = false;\n    this.selectNap.active = false;\n    this.selectRut.active = true;\n  }\n\n  napOpen() {\n    this.RutNode.active = false;\n    this.napNode.active = true;\n    this.selectNap.active = true;\n    this.selectRut.active = false;\n  }\n\n  moreBank() {\n    if (this.MoreBankNode.active === false) {\n      this.MoreBankNode.active = true;\n    } else {\n      this.MoreBankNode.active = false;\n    }\n  }\n\n  inputbank(bank: string, stk: string, ctk: string, cn: string, nd: string) {\n    this.nameBankLb.string = bank;\n    this.STKLb.string = stk;\n    this.CTKLb.string = ctk;\n    this.CNLb.string = cn;\n    this.NDLb.string = nd;\n  }\n  vietcombank() {\n    this.MoreBankNode.active = false;\n    this.inputbank(\n      \"VIETCOMBANK\",\n      \"134354356544\",\n      \"THÍCH CỜ BẠC\",\n      \"HCM\",\n      \"CHỈ CẦN NHẬP THÍCH CỜ BẠC \"\n    );\n  }\n\n  MBbank() {\n    this.MoreBankNode.active = false;\n    this.inputbank(\n      \"MBBANK\",\n      \"12345676543\",\n      \"THÍCH CỜ BẠC\",\n      \"HCM\",\n      \"CHỈ CẦN NHẬP THÍCH CỜ BẠC \"\n    );\n  }\n  TGBank() {\n    this.MoreBankNode.active = false;\n    this.inputbank(\n      \"TẠI GIA BANK\",\n      \"123456789\",\n      \"PHẠM THỊ HÀ ĐÔNG\",\n      \"TẠI GIA\",\n      \"CỜ BẠC LÀ CH*T VỚI BÀ\"\n    );\n  }\n\n  validateMoneyInput() {\n    const money = this.editBoxMoney.string;\n    const numberRegex = /^[0-9]+$/;\n\n    if (!numberRegex.test(money)) {\n      console.log(\"Số tiền nạp phải là số\");\n\n      this.editBoxMoney.string = \"\";\n      return;\n    }\n  }\n\n  validateNameInput() {\n    const name = this.editBoxName.string;\n    const nameRegex = /^[A-Za-z\\s]+$/;\n\n    if (!nameRegex.test(name)) {\n      console.log(\"Họ tên người gửi phải là chữ\");\n      this.editBoxName.string = \"\";\n      return;\n    }\n  }\n\n  noitcenap() {\n    if (\n      this.editBoxMoney.string === \"\" ||\n      this.editBoxName.string === \"\" ||\n      this.editBoxTransactionID.string === \"\"\n    ) {\n      console.log(\"Thiếu nội dung\");\n      return;\n    }\n\n    const money = this.editBoxMoney.string;\n    const name = this.editBoxName.string;\n    const transactionID = this.editBoxTransactionID.string;\n    this.NoitceNode.active = true;\n    this.noticeLb.string = \"Wait for your deposit order to be processed...\";\n    setTimeout(() => {\n      this.noticeLb.string = \"Deposit order has been completed.\";\n      this.balanceLb.string = money;\n    }, 2000);\n  }\n\n  closeNotice() {\n    this.NoitceNode.active = false;\n  }\n\n  noitcerut() {\n    if (\n      this.editBoxNH.string === \"\" ||\n      this.editBoxTK.string === \"\" ||\n      this.editBoxNameRut.string === \"\" ||\n      this.editBoxCN.string === \"\" ||\n      this.editBoxBalanceR.string === \"\"\n    ) {\n      console.log(\"Thiếu nội dung\");\n      return;\n    }\n    const bank = this.editBoxNH.string;\n    const Tk = this.editBoxTK.string;\n    const name = this.editBoxNameRut.string;\n    const CN = this.editBoxCN.string;\n    const money = this.editBoxBalanceR.string;\n    const MoneyInt = parseFloat(money);\n    const moneyBalance = parseFloat(this.balanceLb.string);\n    this.NoitceNode.active = true;\n\n    this.noticeLb.string = \"Wait for your withdrawal order to be processed...\";\n    setTimeout(() => {\n      this.noticeLb.string = \"Withdrawal order has been completed.\";\n      this.balanceLb.string = (moneyBalance - MoneyInt).toString();\n    }, 2000);\n  }\n  closeshop() {\n    this.shopNode.active = false;\n    this.dialog.active = false;\n  }\n}\n"]}